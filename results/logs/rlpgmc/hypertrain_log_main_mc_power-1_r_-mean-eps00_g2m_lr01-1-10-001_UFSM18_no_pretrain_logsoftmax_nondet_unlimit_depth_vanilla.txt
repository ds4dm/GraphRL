nohup: ignoring input
[[1 2 3]
 [4 5 6]]
Supervised Training started
heuristic: min_degree actor learning rate: 0.001 epochs: 400 DataSet: UFSMDataset_Demo

Traceback (most recent call last):
  File "main_mc.py", line 167, in <module>
    dropout=args.dropout,
  File "/local_workspace/liudefen/PycharmProjects/PycharmProjects/GraphRL/gcn/models_gcn.py", line 72, in __init__
    self.gc1 = GraphConvolutionLayer_Sparse(nin, nhidden) # first graph conv layer
  File "/local_workspace/liudefen/PycharmProjects/PycharmProjects/GraphRL/gcn/layers_gcn.py", line 92, in __init__
    self.bias = nn.Parameter(nn.init.xavier_normal_(torch.Tensor(self.nfeatures_out).type(torch.cuda.FloatTensor if torch.cuda.is_available() else torch.FloatTensor), gain=np.sqrt(2.0)), requires_grad=True)
  File "/home/x86_64-unknown-linux_ol7-gnu/anaconda-5.2.0/envs/pytorch/lib/python3.6/site-packages/torch/nn/init.py", line 217, in xavier_normal_
    fan_in, fan_out = _calculate_fan_in_and_fan_out(tensor)
  File "/home/x86_64-unknown-linux_ol7-gnu/anaconda-5.2.0/envs/pytorch/lib/python3.6/site-packages/torch/nn/init.py", line 153, in _calculate_fan_in_and_fan_out
    raise ValueError("Fan in and fan out can not be computed for tensor with less than 2 dimensions")
ValueError: Fan in and fan out can not be computed for tensor with less than 2 dimensions
