nohup: ignoring input
[[1 2 3]
 [4 5 6]]
Supervised Training started
heuristic: min_degree actor learning rate: 0.001 epochs: 500 DataSet: UFSMDataset_Demo

| Xavier Initialization
| Xavier Initialization
| Xavier Initialization
| Xavier Initialization
| Xavier Initialization
| Xavier Initialization
| Xavier Initialization
| Xavier Initialization
| Xavier Initialization
| Xavier Initialization
Use Critic:
False
/local_workspace/liudefen/PycharmProjects/PycharmProjects/GraphRL/gcn/models_gcn.py:382: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.
  features = F.log_softmax(features.t())
parameter name actor.gc1.weight parameter value tensor(1.00000e-02 *
       [[-1.3048]], device='cuda:0')
parameter name actor.gc1.a parameter value tensor([[-0.9202],
        [ 0.5715]], device='cuda:0')
parameter name actor.gc1.bias parameter value tensor(1.00000e-03 *
       [[-1.3345]], device='cuda:0')
parameter name actor.gc2.weight parameter value tensor(1.00000e-02 *
       [[ 1.7918]], device='cuda:0')
parameter name actor.gc2.a parameter value tensor([[-1.4613],
        [-1.0421]], device='cuda:0')
parameter name actor.gc2.bias parameter value tensor(1.00000e-02 *
       [[-1.0210]], device='cuda:0')
parameter name actor.gc3.weight parameter value tensor(1.00000e-02 *
       [[-1.1191]], device='cuda:0')
parameter name actor.gc3.a parameter value tensor([[ 1.5293],
        [-0.8254]], device='cuda:0')
parameter name actor.gc3.bias parameter value tensor(1.00000e-02 *
       [[-1.1666]], device='cuda:0')
parameter name actor.gc4.weight parameter value tensor(1.00000e-02 *
       [[ 3.3369]], device='cuda:0')
parameter name actor.gc4.a parameter value tensor([[ 0.2253],
        [-1.5545]], device='cuda:0')
parameter name actor.gc4.bias parameter value tensor(1.00000e-02 *
       [[ 3.4472]], device='cuda:0')
parameter name actor.gc5.weight parameter value tensor(1.00000e-02 *
       [[ 2.0716]], device='cuda:0')
parameter name actor.gc5.a parameter value tensor([[-0.0987],
        [-0.5014]], device='cuda:0')
parameter name actor.gc5.bias parameter value tensor(1.00000e-02 *
       [[ 3.8838]], device='cuda:0')
parameter name actor.gc6.weight parameter value tensor(1.00000e-03 *
       [[ 8.7399]], device='cuda:0')
parameter name actor.gc6.a parameter value tensor([[-1.1768],
        [ 3.1645]], device='cuda:0')
parameter name actor.gc6.bias parameter value tensor(1.00000e-02 *
       [[-1.3004]], device='cuda:0')
parameter name actor.gc7.weight parameter value tensor(1.00000e-02 *
       [[-3.6877]], device='cuda:0')
parameter name actor.gc7.a parameter value tensor([[ 0.5360],
        [ 1.0465]], device='cuda:0')
parameter name actor.gc7.bias parameter value tensor(1.00000e-03 *
       [[-2.1041]], device='cuda:0')
parameter name actor.gc8.weight parameter value tensor(1.00000e-03 *
       [[-3.4467]], device='cuda:0')
parameter name actor.gc8.a parameter value tensor([[-2.1444],
        [ 0.9552]], device='cuda:0')
parameter name actor.gc8.bias parameter value tensor(1.00000e-02 *
       [[-1.8997]], device='cuda:0')
parameter name actor.gc9.weight parameter value tensor(1.00000e-03 *
       [[ 2.3846]], device='cuda:0')
parameter name actor.gc9.a parameter value tensor([[ 1.0463],
        [-1.1183]], device='cuda:0')
parameter name actor.gc9.bias parameter value tensor(1.00000e-03 *
       [[ 1.6820]], device='cuda:0')
parameter name actor.gc10.weight parameter value tensor(1.00000e-02 *
       [[ 2.3301]], device='cuda:0')
parameter name actor.gc10.a parameter value tensor([[-0.9387],
        [-0.2340]], device='cuda:0')
parameter name actor.gc10.bias parameter value tensor(1.00000e-02 *
       [[-3.4256]], device='cuda:0')
/local_workspace/liudefen/PycharmProjects/PycharmProjects/GraphRL/rl/train_a2c_mc.py:541: RuntimeWarning: invalid value encountered in double_scalars
  _val_ave_gcn = np.sum(val_gcn_greedy) / len(val_gcn_greedy)
/local_workspace/liudefen/PycharmProjects/PycharmProjects/GraphRL/rl/train_a2c_mc.py:547: RuntimeWarning: invalid value encountered in double_scalars
  _val_ave_mind = np.sum(val_mind) / len(val_mind)
epochs 0 loss -40946.29296684265 train min_degreeperformance 2804.3074074074075 train gcn performance 12694.081481481482 val min_degreeperformance nan val gcn performance nan
Traceback (most recent call last):
  File "main_mc.py", line 253, in <module>
    density = args.p
  File "/local_workspace/liudefen/PycharmProjects/PycharmProjects/GraphRL/rl/train_a2c_mc.py", line 407, in train_and_validate
    returns = (returns - self.model.epsilon/ 530000) / (1 - self.model.epsilon)
RuntimeError: The expanded size of the tensor (1) must match the existing size (0) at non-singleton dimension 0
